name: Build and Release APK

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow sur les tags commençant par 'v'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Vérifier le code source
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Configurer le JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Décoder le keystore
      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore

      # 4. Définir les variables d'environnement pour la signature
      - name: Set environment variables
        run: echo "ANDROID_KEYSTORE_PATH=$(pwd)/keystore" >> $GITHUB_ENV

      # 5. Construire l'APK
      - name: Build APK
        run: ./gradlew :kmplog-client:assembleRelease

      # 6. Identifier le chemin exact de l'APK généré
      - name: Find APK
        id: find_apk
        run: |
          apk_path=$(find kmplog-client/build/outputs/apk/release -name "*.apk" | head -n 1)
          echo "APK_PATH=${apk_path}" >> $GITHUB_ENV
          echo "::set-output name=apk_path::${apk_path}"

      # 7. Télécharger l'APK en tant qu'artefact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: ${{ env.APK_PATH }}

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write  # Nécessaire pour publier sur GitHub Release

    steps:
      # 1. Vérifier le code source
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Télécharger l'artefact APK
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk

      # 3. Vérifier les artefacts téléchargés (optionnel)
      - name: Check downloaded artifacts
        run: ls -R

      # 4. Créer la release GitHub en conservant le nom de l'APK
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            $(find release-apk -name "*.apk")
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
