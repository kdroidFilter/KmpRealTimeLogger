name: Build and Release Compose Desktop App with JetBrains JDK

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # 1. Check out the source code
      - name: Checkout source
        uses: actions/checkout@v4

      # 2. Set up JetBrains JDK
      - name: Set up JetBrains JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'jetbrains'
          java-version: '17'
          token: ${{ secrets.GITHUB_TOKEN }}


      # 3. Configure Gradle with cache
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.12'

      # 4. Build the application
      - name: Build with Gradle
        shell: bash
        run: ./gradlew packageDistributionForCurrentOS

      # 5. Upload OS-specific artifacts
      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-deb
          path: KMPLog/kmplog-client/build/compose/binaries/main/deb

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-dmg
          path: KMPLog/kmplog-client/build/compose/binaries/main/dmg

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-msi
          path: KMPLog/kmplog-client/build/compose/binaries/main/msi

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. Check out the source code
      - name: Checkout source
        uses: actions/checkout@v4

      # 2. Download artifacts from all platforms
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-deb

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-dmg

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-msi

      # 3. Create a GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-deb/**
            macos-dmg/**
            windows-msi/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
